<!doctype html>
<html lang="en">
<head>
    <script type="module">
        import { prepareMessage } from 'https://cdn.jsdelivr.net/npm/simple-siwe@0.1.4/+esm'

        function error(msg) {
            document.querySelector("#error").innerText = msg;
        }

        async function siweLogin() {
            const { ethereum } = window;
            if (!ethereum) {
                error("Please install MetaMask!");
                return;
            }

            // Find our Ethereum accounts.
            const accounts = await ethereum.request({ method: 'eth_requestAccounts' });
            if (!accounts.length) {
                error("No accounts found!");
                return;
            }

            // The first account is the one currently selected in MetaMask.
            const account = accounts[0];

            // Get csrf to make Auth.js happy
            const { csrfToken } = await fetch("/siwe/auth/csrf").then(res => res.json());

            // Get nonce to make us happy
            const { nonce } = await fetch("/siwe/nonce").then(res => res.json());

            // Prepare the message
            const rawMessage = {
                domain: window.location.host,
                address: account,
                statement: 'This message is used to sign in to siwe-express-example',
                uri: window.location.origin,
                version: '1.0',
                chainId: ethereum.networkVersion,
                nonce: nonce,
                issuedAt: new Date().toISOString()
            };

            // Sign the message
            const message = prepareMessage(rawMessage);
            const signature = await ethereum.request({
                method: 'personal_sign',
                params: [ message, account ]
            });

            // Send the signed message to the server
            const result = await fetch("/siwe/auth/callback/credentials", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    csrfToken,
                    message,
                    signature
                })
            });

            if (result.status !== 200) {
                // Show the error page as needed.
                window.location = (result.url.indexOf("/siwe/auth/error") >= 0) ? result.url : "/siwe/auth/error";
            } else if (result.url.indexOf("error=CredentialsSignin") >= 0) {
                // This error with happen if authorize() returns null.  In that case, the status can still be 200.
                window.location = "/siwe/auth/error";
            } else {
                // Reload the current page
                window.location = "/";
            }
        }

        async function siweLogout() {
            // Get csrf to make Auth.js happy
            const { csrfToken } = await fetch("/siwe/auth/csrf").then(res => res.json());

            // Sign out
            const result = await fetch("/siwe/auth/signout", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({csrfToken})
                }
            );

            if (result.status !== 200) {
                // Show the error page as needed.
                window.location = (result.url.indexOf("/siwe/auth/error") >= 0) ? result.url : "/siwe/auth/error";
            } else {
                // Reload the current page
                window.location = "/";
            }
        }

        // Attach event listeners to buttons.
        document.addEventListener("DOMContentLoaded", () => {
            document.querySelector('#login')?.addEventListener("click", siweLogin);
            document.querySelector('#logout')?.addEventListener("click", siweLogout);
        });
    </script>
    <title></title>
</head>
<body>
<h1 id="error" style="color: red;"></h1>
<% if (user) { %>
    <p>The current user is: <%= user %></p>
    <button id="logout">Sign-out</button>
<% } else { %>
    <button id="login">Sign-in with Ethereum</button>
<% } %>
</body>
</html>